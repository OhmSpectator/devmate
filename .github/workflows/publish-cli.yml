name: Publish CLI

on:
  workflow_dispatch:
  push:
    tags:
      - client-v*

jobs:
  build:
    name: Build CLI
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4.0.0

      - name: Setup Python
        uses: actions/setup-python@v4.7.0
        with:
          python-version: '3.x'

      - name: Setup Virtual Environment and Install Dependencies (Unix)
        if: runner.os != 'Windows'
        run: |
          python -m venv venv
          source venv/bin/activate
          cd client
          pip install -r requirements.txt
        shell: bash

      - name: Setup Virtual Environment and Install Dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          python -m venv venv
          .\venv\Scripts\Activate.ps1
          cd client
          pip install -r requirements.txt
        shell: powershell

      - name: Build with PyInstaller (Unix)
        if: runner.os != 'Windows'
        run: |
          source venv/bin/activate
          pyinstaller --onefile --name devmate client/devmatecli/client.py
        shell: bash

      - name: Build with PyInstaller (Windows)
        if: runner.os == 'Windows'
        run: |
          .\venv\Scripts\Activate.ps1
          pyinstaller --onefile --name devmate client\devmatecli\client.py
        shell: powershell

      - name: Upload Binary
        uses: actions/upload-artifact@v3.1.3
        with:
          name: devmatecli-${{ matrix.os }}
          path: ./dist/devmate*

  release:
    needs: build
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
    steps:
      # Need to get the release-cli.js script
      - name: Checkout Code
        uses: actions/checkout@v4.0.0

      - name: Download All Artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./artifacts

      - name: Archive Artifacts
        run: |
          tar czvf devmate-cli.tar.gz -C artifacts .
        shell: bash

      - name: Create Release
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const createReleaseLogic = require('.github/scripts/release-cli.js');
            createReleaseLogic({ github, context, core });